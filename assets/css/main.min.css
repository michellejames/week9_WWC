.navbar{background:#fff;height:105px}.menu-button{position:fixed;top:-140px;left:-140px;width:400px;height:400px;border-radius:400px;padding:160px;background-color:#26e8a7;background-clip:content-box;z-index:2;margin-bottom:5%;transition:.3s;transition-timing-function:cubic-bezier(.17,.67,.63,1.3)}.menu-button:hover{width:400px;height:400px;padding:150px;background-color:#346df1}.menu-button:hover span{font-size:2em}.menu-button span{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#fff;font-size:1.5em}nav{position:fixed;top:0;right:0;bottom:100%;left:0;background:hsla(0,0%,100%,.7);z-index:1;overflow:hidden;font-weight:700;font-size:1.5em;transition:.4s;transition-delay:.4s}nav a{text-decoration:none;color:#fff}nav a:hover{text-decoration:underline;color:#346df1}nav div{width:90%;max-width:640px;padding:20px;background:#26e8a7;margin:10px auto;text-align:center;opacity:0;transform:translateY(20px);transition-duration:.2s}nav.open{bottom:0;transition-delay:0}@media (max-width:600px){nav.open{padding-top:25%}}nav.open div{opacity:1;transform:translateY(0);transition-delay:.4s}nav.open div:nth-child(2){transition-delay:.5s}nav.open div:nth-child(3){transition-delay:.6s}.hero{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.hero .hero__core{width:100%;margin-bottom:5%;font-size:2em}.hero .hero__wwclogo{width:100%}.hero .hero__wwclogo img{width:100%;margin-left:0}@media (min-width:768px){.hero{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center}.hero .hero__core{width:100%;margin-bottom:5%;font-size:1.7em}.hero .hero__wwclogo{width:100%}.hero .hero__wwclogo img{width:90%;margin-left:10%}}@media (min-width:1024px){.hero .hero__core{width:40%}.hero .hero__core p{font-size:1.5em}.hero .hero__wwclogo{width:40%}.hero .hero__wwclogo img{width:90%;margin-left:10%}}.learnmore{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:5%}.learnmore:hover p{color:#fff}.learnmore img{width:8%;height:100%;margin-right:20px}.learnmore p{font-size:3em}@media (min-width:768px){.learnmore img{width:6%;height:100%;margin-right:20px}.learnmore p{font-size:2.5em}}.application,.member{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center;background:#fff;padding:3% 0;font-weight:700;margin-bottom:5%}.application .button button,.member .button button{background:#26e8a7;color:#fff;border:none;padding:10px 40px;font-size:1.5em;border-radius:5px;box-shadow:0 10px 5px 0 rgba(0,0,0,.75)}.application .button button:hover,.member .button button:hover{color:#555}.application .application__paragraph p,.application .member__paragraph p,.member .application__paragraph p,.member .member__paragraph p{font-size:1.5em;width:300px}@media (max-width:768px){.application,.member{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.application .button button,.member .button button{margin-bottom:20px}.application .application__paragraph p,.application .member__paragraph p,.member .application__paragraph p,.member .member__paragraph p{padding-left:20px;width:100%}}@media (min-width:900px){.application .application__paragraph p,.application .member__paragraph p,.member .application__paragraph p,.member .member__paragraph p{width:500px}}.parallax__hackathon,.parallax__womantyping{height:400px;margin-bottom:5%}.info{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media (min-width:1024px){.info{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}}.info .infowindows{margin-bottom:5%}.info .infowindows .windows{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-bottom:1%}.info .infowindows .windows .windowtext{padding:0 3%;padding-bottom:10%;background:#fff}@media (min-width:768px){.info .infowindows .windows{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}}@media (min-width:1024px){.info .infowindows .windows{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;width:95%}}.info .infowindows .window1{position:relative;left:-500px;opacity:0;transition:all .5s}.info .infowindows .window1 .image1{background-image:url(../../assets/img/wwc_whoweare.png);width:200%;background-size:cover;background-repeat:no-repeat;background-position:-50px}.info .infowindows .window1.active{left:0;opacity:1}.info .infowindows .window2{position:relative;left:-500px;opacity:0;transition:all .5s}.info .infowindows .window2 .image2{background-image:url(../../assets/img/wwc_members.jpeg);width:200%;background-size:cover;background-repeat:no-repeat;background-position:-50px}.info .infowindows .window2.active{left:0;opacity:1}.info .infowindows .window3{position:relative;left:-500px;opacity:0;transition:all .5s}.info .infowindows .window3 .image3{background-image:url(../../assets/img/woman_dog.jpg);width:200%;background-size:cover;background-repeat:no-repeat;background-position:-50px}.info .infowindows .window3.active{left:0;opacity:1}.info .infowindows .window4{position:relative;left:-500px;opacity:0;transition:all .5s}.info .infowindows .window4 .image4{background-image:url(../../assets/img/pixelwomen.png);width:200%;background-size:cover;background-repeat:no-repeat;background-position:-50px}.info .infowindows .window4.active{left:0;opacity:1}.info .women{background-image:url(../../assets/img/woman_looking.jpg);background-repeat:no-repeat;height:800px;background-position:-30px;margin-bottom:5%;position:relative;right:-500px;opacity:0;transition:all .5s}.info .women .women__text{position:absolute;color:#fff;bottom:0;margin-left:5%;margin-bottom:5%;background:#26e8a7;padding:1% 3%}.info .women .women__text:hover{color:#555}.info .women.active{right:0;opacity:1}@media (min-width:1024px){.info .women{width:100%}}.initiatives{background:#26e8a7;color:#fff;padding:2% 10%;font-weight:700;margin-bottom:5%}.initiatives h2{font-size:2em}.data{-ms-flex-direction:column;flex-direction:column;margin-bottom:5%}.data,.data .data__box{display:-ms-flexbox;display:flex}.data .data__box{-ms-flex-direction:row;flex-direction:row}@media (min-width:768px){.data .data__box .text{max-width:400px;padding:1% 2%}}@media (min-width:768px){.data .data__box{-ms-flex-direction:column;flex-direction:column}}@media (min-width:768px){.data,.data .data__box{display:-ms-flexbox;display:flex}.data{-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center}}.counter_parent{display:-ms-flexbox;display:flex;background:#fff;border-radius:100px;width:376px;height:111px;margin-right:3%;position:relative;top:-500px;opacity:0;transition:all .8s}.counter_parent .counter{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:1em}@media (min-width:768px){.counter_parent{width:200px;height:200px}.counter_parent .counter{font-size:3em}}.counter_parent.active{top:0;opacity:1}footer{background:#fff;padding-left:5%;color:#555;height:200px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:start;align-items:flex-start;width:100%}footer span{font-size:1.5em}footer .google-logo img{width:20%;margin-left:1%}footer .wt-logo img{width:60%;margin-left:1%}@media (min-width:768px){footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}footer .google-logo img{width:40%;margin-left:1%}footer .wt-logo img{width:60%;margin-left:1%}footer span{font-size:1.5em;width:33%}}*{box-sizing:border-box}html{background:#add8e6}body{background:transparent}body,html{width:100%;height:100%;color:#555;font-family:Open Sans,sans-serif;font-weight:300}.wrapper{margin:0 5%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
